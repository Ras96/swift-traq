//
// WebRTCUserStateSessionsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.WebRTCUserStateSessionsInner")
public typealias WebRTCUserStateSessionsInner = TraqAPI.WebRTCUserStateSessionsInner

extension TraqAPI {

public struct WebRTCUserStateSessionsInner: Codable, JSONEncodable, Hashable {

    /** 状態 */
    public var state: String
    /** セッションID */
    public var sessionId: String

    public init(state: String, sessionId: String) {
        self.state = state
        self.sessionId = sessionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case state
        case sessionId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(state, forKey: .state)
        try container.encode(sessionId, forKey: .sessionId)
    }
}

}
