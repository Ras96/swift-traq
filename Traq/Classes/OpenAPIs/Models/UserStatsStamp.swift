//
// UserStatsStamp.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.UserStatsStamp")
public typealias UserStatsStamp = TraqAPI.UserStatsStamp

public extension TraqAPI {
    /** ユーザーの特定スタンプ統計情報 */
    struct UserStatsStamp: Codable, JSONEncodable, Hashable {
        /** スタンプID */
        public var id: UUID
        /** スタンプ数(同一メッセージ上のものは複数カウントしない) */
        public var count: Int64
        /** スタンプ数(同一メッセージ上のものも複数カウントする) */
        public var total: Int64

        public init(id: UUID, count: Int64, total: Int64) {
            self.id = id
            self.count = count
            self.total = total
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case id
            case count
            case total
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(id, forKey: .id)
            try container.encode(count, forKey: .count)
            try container.encode(total, forKey: .total)
        }
    }
}
