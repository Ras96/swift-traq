//
// OgpMedia.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.OgpMedia")
public typealias OgpMedia = TraqAPI.OgpMedia

extension TraqAPI {

/** OGPに含まれる画像の情報 */
public struct OgpMedia: Codable, JSONEncodable, Hashable {

    public var url: String
    public var secureUrl: String?
    public var type: String?
    public var width: Int?
    public var height: Int?

    public init(url: String, secureUrl: String?, type: String?, width: Int?, height: Int?) {
        self.url = url
        self.secureUrl = secureUrl
        self.type = type
        self.width = width
        self.height = height
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case secureUrl
        case type
        case width
        case height
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(url, forKey: .url)
        try container.encode(secureUrl, forKey: .secureUrl)
        try container.encode(type, forKey: .type)
        try container.encode(width, forKey: .width)
        try container.encode(height, forKey: .height)
    }
}

}
