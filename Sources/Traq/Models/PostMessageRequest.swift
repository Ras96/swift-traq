//
// PostMessageRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.PostMessageRequest")
public typealias PostMessageRequest = TraqAPI.PostMessageRequest

public extension TraqAPI {
    /** メッセージ投稿リクエスト */
    struct PostMessageRequest: Codable, JSONEncodable, Hashable {
        static let contentRule = StringRule(minLength: 1, maxLength: 10000, pattern: nil)
        /** メッセージ本文 */
        public var content: String
        /** メンション・チャンネルリンクを自動埋め込みするか */
        public var embed: Bool? = false

        public init(content: String, embed: Bool? = false) {
            self.content = content
            self.embed = embed
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case content
            case embed
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(content, forKey: .content)
            try container.encodeIfPresent(embed, forKey: .embed)
        }
    }
}
