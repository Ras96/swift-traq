//
// GetClient200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.GetClient200Response")
public typealias GetClient200Response = TraqAPI.GetClient200Response

public extension TraqAPI {
    enum GetClient200Response: Codable, JSONEncodable, Hashable {
        case typeOAuth2Client(OAuth2Client)
        case typeOAuth2ClientDetail(OAuth2ClientDetail)

        public func encode(to encoder: Encoder) throws {
            var container = encoder.singleValueContainer()
            switch self {
            case let .typeOAuth2Client(value):
                try container.encode(value)
            case let .typeOAuth2ClientDetail(value):
                try container.encode(value)
            }
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            if let value = try? container.decode(OAuth2Client.self) {
                self = .typeOAuth2Client(value)
            } else if let value = try? container.decode(OAuth2ClientDetail.self) {
                self = .typeOAuth2ClientDetail(value)
            } else {
                throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of GetClient200Response"))
            }
        }
    }
}
