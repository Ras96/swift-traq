//
// PostClientRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.PostClientRequest")
public typealias PostClientRequest = TraqAPI.PostClientRequest

public extension TraqAPI {
    /** OAuth2クライアント作成リクエスト */
    struct PostClientRequest: Codable, JSONEncodable, Hashable {
        /** クライアント名 */
        public var name: String
        /** コールバックURL */
        public var callbackUrl: String
        /** 要求スコープの配列 */
        public var scopes: [OAuth2Scope]
        /** 説明 */
        public var description: String

        public init(name: String, callbackUrl: String, scopes: [OAuth2Scope], description: String) {
            self.name = name
            self.callbackUrl = callbackUrl
            self.scopes = scopes
            self.description = description
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case name
            case callbackUrl
            case scopes
            case description
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(name, forKey: .name)
            try container.encode(callbackUrl, forKey: .callbackUrl)
            try container.encode(scopes, forKey: .scopes)
            try container.encode(description, forKey: .description)
        }
    }
}
