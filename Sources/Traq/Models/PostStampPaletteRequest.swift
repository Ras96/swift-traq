//
// PostStampPaletteRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.PostStampPaletteRequest")
public typealias PostStampPaletteRequest = TraqAPI.PostStampPaletteRequest

public extension TraqAPI {
    /** スタンプパレット作成リクエスト */
    struct PostStampPaletteRequest: Codable, JSONEncodable, Hashable {
        static let stampsRule = ArrayRule(minItems: nil, maxItems: 200, uniqueItems: true)
        static let nameRule = StringRule(minLength: nil, maxLength: 30, pattern: nil)
        static let descriptionRule = StringRule(minLength: nil, maxLength: 1000, pattern: nil)
        /** パレット内のスタンプのUUID配列 */
        public var stamps: Set<UUID>
        /** パレット名 */
        public var name: String
        /** 説明 */
        public var description: String

        public init(stamps: Set<UUID>, name: String, description: String) {
            self.stamps = stamps
            self.name = name
            self.description = description
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case stamps
            case name
            case description
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(stamps, forKey: .stamps)
            try container.encode(name, forKey: .name)
            try container.encode(description, forKey: .description)
        }
    }
}
