//
// PostUserRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.PostUserRequest")
public typealias PostUserRequest = TraqAPI.PostUserRequest

public extension TraqAPI {
    /** ユーザー登録リクエスト */
    struct PostUserRequest: Codable, JSONEncodable, Hashable {
        static let nameRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[a-zA-Z0-9_-]{1,32}$/")
        static let passwordRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[\\x20-\\x7E]{10,32}$/")
        /** ユーザー名 */
        public var name: String
        /** パスワード */
        public var password: String?

        public init(name: String, password: String? = nil) {
            self.name = name
            self.password = password
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case name
            case password
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(name, forKey: .name)
            try container.encodeIfPresent(password, forKey: .password)
        }
    }
}
