//
// PostMessageStampRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.PostMessageStampRequest")
public typealias PostMessageStampRequest = TraqAPI.PostMessageStampRequest

public extension TraqAPI {
    /** スタンプを押すリクエスト */
    struct PostMessageStampRequest: Codable, JSONEncodable, Hashable {
        static let countRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 100, exclusiveMaximum: false, multipleOf: nil)
        /** 押す数 */
        public var count: Int

        public init(count: Int) {
            self.count = count
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case count
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(count, forKey: .count)
        }
    }
}
