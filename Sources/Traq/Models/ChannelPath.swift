//
// ChannelPath.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

@available(*, deprecated, renamed: "TraqAPI.ChannelPath")
public typealias ChannelPath = TraqAPI.ChannelPath

public extension TraqAPI {
    /** チャンネルパス */
    struct ChannelPath: Codable, JSONEncodable, Hashable {
        static let pathRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(\/[a-zA-Z0-9-_]+)+$/")
        /** チャンネルパス */
        public var path: String

        public init(path: String) {
            self.path = path
        }

        public enum CodingKeys: String, CodingKey, CaseIterable {
            case path
        }

        // Encodable protocol methods

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(path, forKey: .path)
        }
    }
}
