//
// PublicAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

extension TraqAPI {
    open class PublicAPI {
        /**
         ユーザーのアイコン画像を取得

         - parameter username: (path) ユーザー名
         - returns: URL
         */
        @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
        open class func getPublicUserIcon(username: String) async throws -> URL {
            try await getPublicUserIconWithRequestBuilder(username: username).execute().body
        }

        /**
         ユーザーのアイコン画像を取得
         - GET /public/icon/{username}
         - ユーザーのアイコン画像を取得します。
         - OAuth:
           - type: oauth2
           - name: OAuth2
         - Bearer Token:
           - type: http
           - name: bearerAuth
         - parameter username: (path) ユーザー名
         - returns: RequestBuilder<URL>
         */
        open class func getPublicUserIconWithRequestBuilder(username: String) -> RequestBuilder<URL> {
            var localVariablePath = "/public/icon/{username}"
            let usernamePreEscape = "\(APIHelper.mapValueToPathItem(username))"
            let usernamePostEscape = usernamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
            localVariablePath = localVariablePath.replacingOccurrences(of: "{username}", with: usernamePostEscape, options: .literal, range: nil)
            let localVariableURLString = TraqAPI.basePath + localVariablePath
            let localVariableParameters: [String: Any]? = nil

            let localVariableUrlComponents = URLComponents(string: localVariableURLString)

            let localVariableNillableHeaders: [String: Any?] = [:]

            let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

            let localVariableRequestBuilder: RequestBuilder<URL>.Type = TraqAPI.requestBuilderFactory.getBuilder()

            return localVariableRequestBuilder.init(method: "GET", URLString: localVariableUrlComponents?.string ?? localVariableURLString, parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
        }

        /**
         バージョンを取得

         - returns: Version
         */
        @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
        open class func getServerVersion() async throws -> Version {
            try await getServerVersionWithRequestBuilder().execute().body
        }

        /**
         バージョンを取得
         - GET /version
         - サーバーバージョン及びサーバーフラグ情報を取得します。
         - OAuth:
           - type: oauth2
           - name: OAuth2
         - Bearer Token:
           - type: http
           - name: bearerAuth
         - returns: RequestBuilder<Version>
         */
        open class func getServerVersionWithRequestBuilder() -> RequestBuilder<Version> {
            let localVariablePath = "/version"
            let localVariableURLString = TraqAPI.basePath + localVariablePath
            let localVariableParameters: [String: Any]? = nil

            let localVariableUrlComponents = URLComponents(string: localVariableURLString)

            let localVariableNillableHeaders: [String: Any?] = [:]

            let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

            let localVariableRequestBuilder: RequestBuilder<Version>.Type = TraqAPI.requestBuilderFactory.getBuilder()

            return localVariableRequestBuilder.init(method: "GET", URLString: localVariableUrlComponents?.string ?? localVariableURLString, parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
        }
    }
}
